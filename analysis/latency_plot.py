#!/usr/bin/env python3
"""
latency_plot.py
---------------
This script reads a CSV file containing performance metrics (CPU and GPU latency)
for each run (e.g., generated by metrics_logger.cpp) and plots the latency measurements
using matplotlib.

CSV format assumed:
    RunIndex,CPU_Time_ms,GPU_Time_ms

Usage:
    python latency_plot.py
"""

import pandas as pd
import matplotlib.pyplot as plt

def main():
    # Path to the CSV file generated by the metrics logger.
    csv_file = "retrieval_metrics.csv"
    
    # Read the CSV file using pandas.
    try:
        df = pd.read_csv(csv_file)
    except Exception as e:
        print(f"Error reading CSV file {csv_file}: {e}")
        return
    
    # Check that the required columns exist.
    required_columns = {"RunIndex", "CPU_Time_ms", "GPU_Time_ms"}
    if not required_columns.issubset(df.columns):
        print(f"CSV file must contain the columns: {required_columns}")
        return

    # Plot CPU and GPU latency vs. RunIndex.
    plt.figure(figsize=(10, 6))
    plt.plot(df["RunIndex"], df["CPU_Time_ms"], label="CPU Time (ms)", marker="o")
    plt.plot(df["RunIndex"], df["GPU_Time_ms"], label="GPU Time (ms)", marker="x")
    
    # Add title, axis labels, legend, and grid.
    plt.title("Retrieval Kernel Latency")
    plt.xlabel("Run Index")
    plt.ylabel("Time (ms)")
    plt.legend()
    plt.grid(True)
    
    # Adjust layout and save the figure.
    plt.tight_layout()
    plt.savefig("latency_plot.png")
    plt.show()

if __name__ == "__main__":
    main()
